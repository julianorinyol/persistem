
<div class='container col-md-5'>

<div id'top-row'>
  <h2>persistem</h2>
  <small>
    <% if current_user %>
    Signed in as <%= current_user.email %> (<%= link_to "Log out", session_path("current"), method: :delete %>)
    <% else %>
    <%= link_to "Log In", new_session_path %> | <%= link_to "Sign Up", new_user_path %>
    <% end %>
    <%= link_to 'Generate Quiz', new_quiz_path %>
    <%= link_to 'View Past Quizzes', quiz_index_path %>
    <a id='sync-button'>Sync With Evernote</a>


  </small>
</div>  

<ul id='notelist-tabs'class='nav nav-pills'><!---->
  <li role='presentation' class="active"><a id='note-list-tab'>Your Notes</a></li>
  <li role='presentation'><a id='notebook-list-tab'>Notebooks</a></li>
</ul>

<div id='table-container'>
  <%= render 'noteslist' %>
</div>

 <%= link_to 'Download CSV list of your notes', notes_path(format: :csv) %>
<% if !session[:authtoken] && @current_user %>
 <%= link_to 'Login via Evernote', '/auth/evernote' %>
<% end %>
<% if @current_user && session[:authtoken] %>
  <p>You have authenticated with Evernote.</p>
<% else %>
  <p>Login to your persistem account to authenticate with Evernote.</p>
<% end %>
<br>
</div>



<!-- ********************************************************************************************* -->


<script>
var notebooks = <%= raw @my_notebooks.to_json %>;
var myNotes = <%= raw @my_notes.to_json %>;

function displayNotes(notes, notebooks) {
  $('#private-notes-list tbody').html('');
  for(var i = 0; i < notes.length; i++) {
    note = notes[i];
    notebook = getNotebookFromNote(note, notebooks);
    var trInnards = "<tr class='clickable-tr' data-link='/notes/" + note.id + "'><td>" + note.title +  "</td><td>"+ notebook.title +"</td></tr>"
    tr = $(trInnards);
    tr.appendTo($('#private-notes-list tbody'));
  }
}
function displayNotebooks(notes, notebooks) {
  for(var i = 0; i < notebooks.length; i++) {
    notebook = notebooks[i];
    var trInnards = "<tr class='bla-class' id='bla"+i+"' data-link=''><td>" + notebook.title +  "</td><td>"+ '# of notes in book' +"</td></tr>"
    tr = $(trInnards);
    tr.appendTo($('#private-notes-list tbody'));

    $("#bla" + i).on('click',function(){
      var id = $(this).attr('id')[3]; 
      displayNotesForNotebook(myNotes, notebooks[id]);
    })
  }
  

  $(".bla-class").on('mouseenter', function() {
    $(this).css({"background":"purple", 'color':'white'});
  })
  $(".bla-class").on('mouseleave', function() {
    $(this).css({"background":"white",'color':'black'});
  })
} 
function displayNotesForNotebook(notes, notebook){
  $('#private-notes-list tbody').html('');
  notebooksNotes = getNotesForNotebook(notes, notebook);
  for(var i = 0; i < notebooksNotes.length; i++) {
    note = notebooksNotes[i];
    var trInnards = "<tr class='clickable-tr' data-link='/notes/" + note.id + "'><td>" + note.title +  "</td><td>"+ notebook.title +"</td></tr>"
    tr = $(trInnards);
    tr.appendTo($('#private-notes-list tbody'));
  }
}

function getNotesForNotebook(notes, notebook) {
  notebooksNotes =[];
  for(var i = 0; i < notes.length; i++) {
    var note = notes[i];
    if( note.notebook_guid == notebook.guid ){
      notebooksNotes.push(note);
    }
  }
  return notebooksNotes;
}

$('#notebook-list-tab, #note-list-tab').on('click', function(){
  console.log('clicked');
  $('#notelist-tabs li').removeClass();
  $(this).parent().addClass('active');
  $('#private-notes-list tbody').html('');
})

$('#notebook-list-tab').on('click', function(){
   displayNotebooks(myNotes, notebooks);
   setUpBindings();
})
$('#note-list-tab').on('click', function(){
   displayNotes(myNotes, notebooks);
   setUpBindings();
})




$('#sync-button').on('click', function(){
  console.log('clicked');   
  $.ajax({
    url: '/notebooks/list',
    method: 'GET',
    dataType: 'json',
    success: function(res) {
      notebooks = res;
      callForNotes(res);
    },
    error: function(err, message) {
      console.log('notebook get ajax failed' + message);
    }
  });
});

function getNotebookFromNote(note, notebooks) {
  for(var i = 0; i < notebooks.length; i++) {
    notebook = notebooks[i];
    if(notebook.guid == note.notebook_guid) {
      return notebook;
    }
  }
}

function callForNotes(notebooks){
  $.ajax({
        url: '/notes/sync/evernote',
        method: 'GET',
        dataType: 'json',
        success: function(notes) {
          console.log('ajax success!');
          displayNotes(notes, notebooks);
          setUpBindings();
        },
        error: function(phase, message){
          console.log('ajax post failed', message);
          console.log('ajax post failed');
        }
      });
}
function setUpBindings(){
    $("tr[data-link].clickable-tr").click(function() {
      window.location = $(this).data("link")
    })
    $("tr[data-link]").on('mouseenter', function() {
      $(this).css({"background":"purple", 'color':'white'});
    })
    $("tr[data-link]").on('mouseleave', function() {
      $(this).css({"background":"white",'color':'black'});
    })
}
</script>
